Louis Yang
        -:    0:Source:palindrome.cpp
        -:    0:Graph:palindrome.gcno
        -:    0:Data:palindrome.gcda
        -:    0:Runs:2
        -:    1:#include <iostream>
        -:    2:using namespace std;
        -:    3:#include <vector>
        -:    4:class MyString {
        -:    5:	vector<char> thestring;
        -:    6:	vector<char>::iterator fi;
        -:    7:public:
        -:    8:
        2:    9:	bool Pal() {
        2:   10:		int start = 0, end;
        2:   11:		RemoveSpace();
        2:   12:		UpCase();
        2:   13:		end = thestring.size()-1;
        5:   14:		while(start<=end)
        4:   15:			if(thestring[start]==thestring[end]){
        3:   16:				start++;
        3:   17:				end--;
        -:   18:			}
        -:   19:			else
        -:   20:			{
        1:   21:				return false;
        -:   22:			}
        1:   23:		return true;
        -:   24:	}
        2:   25:	void RemoveSpace(){
        -:   26:		
       16:   27:		for(fi = thestring.begin(); fi != thestring.end();++fi)
       14:   28:			if(*fi == ' ')
        1:   29:				thestring.erase(fi);
        2:   30:	}
        2:   31:	void UpCase() {
       16:   32:		for(fi = thestring.begin(); fi != thestring.end();++fi)
       14:   33:			if(*fi>='a' && *fi<='z')
       12:   34:				*fi = *fi - 32;
        2:   35:	}
        2:   36:	void GetString(){
        -:   37:		char c;
        2:   38:		cout << "Enter a string:";
        2:   39:		cin >> c;
       17:   40:		while (c != '\n'){
       15:   41:			thestring.push_back(c);
       15:   42:			cin.get(c);
        -:   43:		}
        2:   44:	}
        -:   45:	
        -:   46:	void WriteString() {
        -:   47:		for(fi = thestring.begin(); fi != thestring.end();++fi)
        -:   48:			cout << *fi;
        -:   49:	}
        -:   50:};
        -:   51:
        2:   52:int main () {
        2:   53:	MyString s;
        2:   54:	s.GetString();
        2:   55:	if(s.Pal()) 
        1:   56:		cout << "Palindrome";
        -:   57:	else
        1:   58:		cout << "Not a palindrome";
        2:   59:	cout << endl;
        2:   60:	return 0;
        -:   61:}
        -:   62:
